document.addEventListener('DOMContentLoaded', () => {

    // ===============================================
    // KHAI B√ÅO BI·∫æN D·ªÆ LI·ªÜU & ELEMENT QUAN TR·ªåNG
    // (B√¢y gi·ªù t·∫•t c·∫£ c√°c bi·∫øn DOM ƒë·ªÅu ƒë∆∞·ª£c t√¨m l·∫°i c·ª•c b·ªô khi c·∫ßn)
    // ===============================================
    
    // G√°n bi·∫øn DOM C·ª§C B·ªò (Kh√¥ng ph·∫£i to√†n c·ª•c)
    let classData = []; 
    let currentGirlId = null; 

    // H√†m ti·ªán √≠ch t√¨m element c·ª•c b·ªô
    const getElement = (id) => document.getElementById(id);

    // ===============================================
    // 1. T·∫¢I D·ªÆ LI·ªÜU T·ª™ JSON
    // ===============================================
    async function loadData() {
        // T√¨m element DOM ngay khi h√†m loadData ch·∫°y ƒë·ªÉ ƒë·∫£m b·∫£o ch√∫ng t·ªìn t·∫°i
        const girlsContainer = getElement('girls-container');
        const rainContainer = getElement('heart-rain-container');
        
        try {
            const response = await fetch('./data/girls_data.json');
            if (!response.ok) {
                throw new Error('Kh√¥ng th·ªÉ t·∫£i file d·ªØ li·ªáu JSON. Vui l√≤ng ki·ªÉm tra ƒë∆∞·ªùng d·∫´n v√† c√∫ ph√°p.');
            }
            classData = await response.json();
            renderGirlsCards(classData); 
            
            if (rainContainer) {
                // Ch·ªâ ch·∫°y n·∫øu element rainContainer ƒë∆∞·ª£c t√¨m th·∫•y
                setInterval(createHeartRain, 150); 
            }
            
        } catch (error) {
            console.error('L·ªñI [loadData]:', error);
            if (girlsContainer) {
                girlsContainer.innerHTML = '<p style="color: red; padding: 50px;">L·ªñI T·∫¢I D·ªÆ LI·ªÜU. Vui l√≤ng ki·ªÉm tra Console (F12) ƒë·ªÉ xem chi ti·∫øt.</p>';
            }
        }
        
        // G√°n s·ª± ki·ªán cho c√°c n√∫t ƒëi·ªÅu khi·ªÉn (ch·ªâ c·∫ßn ch·∫°y m·ªôt l·∫ßn)
        setupEventHandlers();
    }
    
    // H√†m m·ªõi ƒë·ªÉ t·∫≠p trung logic g√°n s·ª± ki·ªán cho Modal
    function setupEventHandlers() {
        const searchInput = getElement('search-input');
        const keypad = getElement('keypad');
        const closeButtons = document.querySelectorAll('.close-btn, .close-btn-video');
        
        if (searchInput) {
            searchInput.addEventListener('keyup', (e) => {
                const searchText = e.target.value.toLowerCase().trim();
                const filteredData = classData.filter(girl => 
                    girl.name.toLowerCase().includes(searchText)
                );
                renderGirlsCards(filteredData);
            });
        }
        
        // G√°n s·ª± ki·ªán cho b√†n ph√≠m s·ªë
        if (keypad) { 
            keypad.addEventListener('click', handleKeypadClick);
        }

        // G√°n s·ª± ki·ªán ƒê√≥ng Modal
        if (closeButtons.length > 0) {
            closeButtons.forEach(btn => {
                btn.addEventListener('click', handleCloseButtonClick);
            });
        }
        
        // G√°n s·ª± ki·ªán ƒë√≥ng Modal khi click ra ngo√†i (window)
        window.addEventListener('click', handleWindowClick);
    }
    

    // ===============================================
    // 2. HI·ªÇN TH·ªä C√ÅC CARD TH√îNG TIN
    // ===============================================
    function renderGirlsCards(data) {
        const girlsContainer = getElement('girls-container');
        if (!girlsContainer) return;

        girlsContainer.innerHTML = ''; 
        if (data.length === 0) {
            girlsContainer.innerHTML = '<p>Kh√¥ng t√¨m th·∫•y b·∫°n n·ªØ n√†o ph√π h·ª£p.</p>';
            return;
        }

        data.forEach(girl => {
            const card = document.createElement('div');
            card.className = 'girl-card';
            card.setAttribute('data-id', girl.id);
            
            card.innerHTML = `
                <img src="${girl.avatarUrl}" alt="Avatar c·ªßa ${girl.name}" class="avatar">
                <h2>${girl.name}</h2>
                <p>Sinh nh·∫≠t: ${girl.dob}</p>
                <button class="surprise-btn">Xem ƒêi·ªÅu B·∫•t Ng·ªù ‚ú®</button>
            `;

            const surpriseBtn = card.querySelector('.surprise-btn');
            surpriseBtn.addEventListener('click', () => showSafeModal(girl.id));

            girlsContainer.appendChild(card);
        });
    }

    // ===============================================
    // 4. LOGIC K√âT S·∫ÆT (MODAL) V√Ä VIDEO
    // ===============================================

    // a. Hi·ªán Modal K√©t S·∫Øt
    function showSafeModal(girlId) {
        currentGirlId = girlId; 
        const display = getElement('passcode-display');
        const errorMsg = getElement('error-message');
        const safeModal = getElement('safe-modal');
        
        if (display) display.value = ''; 
        if (errorMsg) errorMsg.textContent = ''; 
        if (safeModal) safeModal.style.display = 'flex'; // Thay ƒë·ªïi t·ª´ 'block' th√†nh 'flex'
    }

    // b. X·ª≠ l√Ω click b√†n ph√≠m s·ªë (Bao g·ªìm N√∫t M·ªü)
 function handleKeypadClick(e) {
    const target = e.target.closest('.keypad-btn');
    if (!target) return; 

    const key = target.getAttribute('data-key');
    const currentPasscodeDisplay = getElement('passcode-display');
    const errorMsg = getElement('error-message'); // L·∫•y element th√¥ng b√°o l·ªói
    
    if (!currentPasscodeDisplay) return; 

    let currentCode = currentPasscodeDisplay.value || '';
    if (errorMsg) errorMsg.textContent = ''; // X√≥a l·ªói ch·ªâ khi errorMsg t·ªìn t·∫°i

    if (key === 'C') {
        currentPasscodeDisplay.value = currentCode.slice(0, -1);
        
    } else if (key && key.length === 1 && currentCode.length < 4) {
        currentPasscodeDisplay.value += key;
        if (currentPasscodeDisplay.value.length === 4) {
            verifyPasscode(currentPasscodeDisplay.value, errorMsg);
        }
    }
}

    // H√†m m·ªõi ƒë·ªÉ ki·ªÉm tra m·∫≠t m√£
    function verifyPasscode(enteredPasscode, errorMsg) {
        // KI·ªÇM TRA AN TO√ÄN TUY·ªÜT ƒê·ªêI
        const currentPasscodeDisplay = getElement('passcode-display'); // L·∫•y l·∫°i n·∫øu c·∫ßn
        if (!currentPasscodeDisplay) {
            console.error('L·ªñI (Unlock): Element b√†n ph√≠m b·ªã m·∫•t khi x√°c th·ª±c.');
            return;
        }

        const trimmedPasscode = (enteredPasscode || '').trim(); 

        // console.log('ƒêang ki·ªÉm tra m·∫≠t m√£. M·∫≠t m√£ nh·∫≠p:', trimmedPasscode); 
        
        // Ki·ªÉm tra ƒë·ªô d√†i
        if (trimmedPasscode.length !== 4) { 
            if (errorMsg) errorMsg.textContent = '‚ùå M·∫≠t m√£ ph·∫£i c√≥ 4 ch·ªØ s·ªë.';
            return; 
        }

        const girl = classData.find(g => g.id === currentGirlId);

        if (girl && trimmedPasscode === girl.passcode) {
            if (errorMsg) errorMsg.textContent = 'üéâ M·∫≠t m√£ ch√≠nh x√°c! ƒêang m·ªü qu√†...';
            
            setTimeout(() => {
                const safeModal = getElement('safe-modal');
                if (safeModal) safeModal.style.display = 'none';
                showVideoModal(girl);
            }, 300);
            
        } else {
            if (errorMsg) errorMsg.textContent = '‚ùå M·∫≠t m√£ kh√¥ng ƒë√∫ng. Vui l√≤ng th·ª≠ l·∫°i.';
        }
    }


    // c. Hi·ªÉn th·ªã Modal Video - ƒê√É S·ª¨A CH·ªÆA HO√ÄN TO√ÄN T√åM L·∫†I BI·∫æN C·ª§C B·ªò
    function showVideoModal(girl) { 
        // T√åM T·∫§T C·∫¢ C√ÅC ELEMENT C·ª§C B·ªò NGAY T·∫†I ƒê√ÇY
        const videoPlaceholder = getElement('video-placeholder');
        const greetingAreaLocal = getElement('greeting-area'); 
        const videoModal = getElement('video-modal');

        // Ki·ªÉm tra an to√†n
        if (!greetingAreaLocal || !videoPlaceholder || !videoModal) {
             console.error('L·ªñI (Video): Kh√¥ng t√¨m th·∫•y element Modal Video (greetingArea, videoPlaceholder, ho·∫∑c videoModal). Vui l√≤ng ki·ªÉm tra index.html.');
             return;
        }

        const greetingHTML = `
            <h2 class="greeting-name">Qu√† d√†nh t·∫∑ng ${girl.name} ‚ù§Ô∏è</h2>
            <p class="greeting-text">"${girl.greeting}"</p>
        `;

        greetingAreaLocal.innerHTML = greetingHTML; 

        const iframe = document.createElement('iframe');
        iframe.src = girl.videoLink + '?autoplay=1&rel=0'; 
        iframe.allow = 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture';
        iframe.allowFullscreen = true;
        
        videoPlaceholder.innerHTML = ''; 
        videoPlaceholder.appendChild(iframe);
        
        videoModal.style.display = 'block';
    }

    // d. X·ª≠ l√Ω ƒë√≥ng Modal
    function handleCloseButtonClick() {
        const safeModal = getElement('safe-modal');
        const videoModal = getElement('video-modal');
        
        if (safeModal) safeModal.style.display = 'none';
        
        if (videoModal && videoModal.style.display === 'block') {
            const videoPlaceholder = getElement('video-placeholder');
            if (videoPlaceholder) videoPlaceholder.innerHTML = '';
            videoModal.style.display = 'none';
        }
    }

    // e. ƒê√≥ng modal khi click ra ngo√†i (window)
    function handleWindowClick(event) {
        const safeModal = getElement('safe-modal');
        const videoModal = getElement('video-modal');
        
        if (event.target === safeModal) {
            if (safeModal) safeModal.style.display = 'none';
        }
        if (event.target === videoModal) {
            const videoPlaceholder = getElement('video-placeholder');
            if (videoPlaceholder) videoPlaceholder.innerHTML = ''; 
            if (videoModal) videoModal.style.display = 'none';
        }
    }

    // ===============================================
    // 5. HI·ªÜU ·ª®NG TIM (M∆ØA TIM V√Ä TIM CLICK)
    // ===============================================

    // a. T·∫°o M∆∞a Tim R∆°i (Heart Rain)
    function createHeartRain() {
        const rainContainer = getElement('heart-rain-container');
        // Logic t·∫°o tim (gi·ªØ nguy√™n)
        const heart = document.createElement('div');
        heart.className = 'heart';
        
        heart.style.left = Math.random() * 100 + 'vw';
        
        const size = Math.random() * 10 + 10; 
        heart.style.width = size + 'px';
        heart.style.height = size + 'px';
        
        const duration = Math.random() * 5 + 5; 
        heart.style.animationDuration = duration + 's';
        
        if (rainContainer) {
            rainContainer.appendChild(heart);
        }

        setTimeout(() => {
            if (heart.parentNode) heart.remove();
        }, duration * 1000);
    }


    // b. Hi·ªáu ·ª®ng Tim Bay Khi Click
    document.addEventListener('click', (e) => {
        if (e.target.closest('.modal')) return; 

        const clickHeart = document.createElement('div');
        clickHeart.className = 'heart click-heart';
        clickHeart.style.left = e.clientX + 'px';
        clickHeart.style.top = e.clientY + 'px';
        
        document.body.appendChild(clickHeart);

        setTimeout(() => {
            clickHeart.remove();
        }, 1000); 
    });


    // ===============================================
    // KH·ªûI CH·∫†Y TRANG WEB
    // ===============================================
    loadData();

}); // K·∫æT TH√öC DOMContentLoaded